<h1>地址頁面</h1> 
 
<div id="floating-panel">
  <input id="address" type="textbox" value="" placeholder="兄弟底叨？">
  <input id="submit" type="button" value="Search">
</div>

<div id="map"  style="width:800px;height: 600px;">
     
  
</div>

<script>
var map;
$(document).on('turbolinks:load', function() {
    console.log('JS ttttriggered');
    initMap()
});


// document.addEventListener('turbolinks:load', function() {

    function initMap() {
        var markers = [];
        var infoWindows = [];
        var myLocation = null;
        
        //  取得瀏覽器定位座標 keyword: geolocation html5
        if ("geolocation" in navigator) {
            /* geolocation is available */
            navigator.geolocation.getCurrentPosition(
    
                // success 的時候執行
                // position = 取得結果
                function (position) {
                    
                    // 取得 user 座標
                    let myLocation = Object.assign(
                        {},
                        {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        }
                    );
                    console.log(myLocation);
                    // ---------- 畫地圖 ------------
                    map = new google.maps.Map(document.getElementById("map"), {
                        center: myLocation,
                        zoom: 18
                    });
    
                    // ----------  ------------
                    // var geocoder = new google.maps.Geocoder();
    
                    // geocoder.geocode({ 'address': '五倍紅寶石' }, function (results, status) {
                    //     console.log(results)
    
                    // });
    
                    
    
                    //info windows
                    var info_config = [];
    
    
                    //建立地圖 marker 的集合
                    // 要在地圖上顯示的座標 都放在這
                    var marker_config = [
                        {
                            position: myLocation,
                            map: map,
                            title: "媽 我在這"
                        }
                    ];
                    
                    // var marker_config2 = [
                    //     {
                    //         position: searchLocation,
                    //         map: map,
                    //         title: "媽 我在這"
                    //     }
                    // ];
    
                    // 1. 從db取回資料
                    // 2. 將資料塞到 marker_config
    
                    // for(var i = 0; i < dbData.length ; i++){
                    //     marker_config.push(dbData[i]);
                    // }
                    
    
                    //設定 Info window 內容
    
                    info_config.forEach(function (e, i) {
                        infoWindows[i] = new google.maps.InfoWindow({
                            content: e
                        });
                    });
    
                    //標出 marker 資訊 
                    marker_config.forEach(function (e, i) {
                        markers[i] = new google.maps.Marker(e);
                        markers[i].setMap(map);
                        markers[i].addListener("click", function () {
                            // TODO infoWindows
                            infoWindows[i].open(map, markers[i]);
                        });
                    });
    
                    // 可暫時忽略
                    function _geocoder(searchLocation) {
                        geocoder.geocode(
                            {
                                address: searchLocation
                            },
                            function (results, status) {
                                if (status == google.maps.GeocoderStatus.OK) {
                                    LatLng = results[0].geometry.location;
                                    return results;
                                }
                            }
                        );
                    }
                },
    
                // failed 的時候執行
                function (error) {
                    console.log(error);
                }
            );
        } else {
            /* geolocation IS NOT available */
            
        }
    
        // console.log(_geocoder());
        if (typeof map === 'undefined') { 
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -33.8688, lng: 151.2195 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });
        }

        // Create the search box and link it to the UI element.
        var input = document.getElementById('address');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function () {
            searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            // Clear out the old markers.
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            places.forEach(function (place) {
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                }));

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });

        
    }
    
    // ------------  WHEN CLICK SUBMIT BUTTON
    $('#submit').on('click', function () {
        console.log('CLIIIIIICK');
    
        // geocodeAddress(geocoder, map);
    // function searchAddress() {
        searchLocation = document.getElementById('address').value;
        console.log(searchLocation)
        // document.getElementById('address').value = '';
    // }
        // searchAddress();
        function _geocoder(searchLocation) {
                        geocoder.geocode(
                            {
                                address: searchLocation
                            },
                            function (results, status) {
                                if (status == google.maps.GeocoderStatus.OK) {
                                    LatLng = results[0].geometry.location;
                                    return results;
                                }
                            }
                        );
                    }
       
    });
    // ------------
    
    
// }); 
</script>

<script
defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAVDZMwKN8RtcS_Sl4OaM_FDCl9hVYy_cU&libraries=places&callback=initMap"
></script>
